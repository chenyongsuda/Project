安装stress和sysstat
=====================================================================================================
stress介绍
-? 显示帮助信息
-v 显示版本号
-q 不显示运行信息
-n 显示已完成的指令情况
-t --timeout N 指定运行N秒后停止
--backoff N 等待N微妙后开始运行
-c 产生n个进程 每个进程都反复不停的计算随机数的平方根
-i 产生n个进程 每个进程反复调用sync()，sync()用于将内存上的内容写到硬盘上
-m --vm n 产生n个进程,每个进程不断调用内存分配malloc和内存释放free函数
--vm-bytes B 指定malloc时内存的字节数 （默认256MB）
--vm-hang N 指定在free钱的秒数
-d --hadd n 产生n个执行write和unlink函数的进程
-hadd-bytes B 指定写的字节数
--hadd-noclean 不unlink
时间单位可以为秒s，分m，小时h，天d，年y，文件大小单位可以为K，M，G

stress cpu 测试
stress测试cpu，是在用户态将cpu 耗尽。

[root@jiangyi01.sqa.zmf /home/ahao.mah/ALIOS_QA/tools/stress-1.0.4]
#stress -c 1 -t 100

========================================================================================================
问题查询方式
1. 先看uptime 看下平均进程数.表示1 5 15分钟平均的进程数,表示系统内处于运行和不可中断状态的进程(表示运行中等待IO的进程)数
如果大于CPU核数表示比较繁忙

2.看下是CPU密集还是IO密集,因为CPU密集和IO密集型都会导致数值比较大

3.使用
mpstat -P ALL 1 5
 CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle


看下usr%  %iowait %system表示用户态CPU 和内核态CPU 和IO等待的百分比
一般如果IOWAIT比较高就是IO密集型

4.使用ipstat看下哪个进程在占用










=====================================================================================================
# mpstat
是实时系统监控工具。其报告与CPU的一些统计信息，这些信息存放在/proc/stat文件中。在多CPUs系统里，其不但能查看所有CPU的平均状况信息，而且能够查看特定CPU的信息
可以查看多核心cpu中每个计算核心的统计数据；而vmstat只能查看系统整体cpu情况。
# mpstat
Linux 2.6.32-431.el6.x86_64 (vm4.cluster.com) 	09/17/2017 	_x86_64_	(1 CPU)
04:06:12 PM  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest   %idle
04:06:12 PM  all    0.71    0.00    0.69    0.68    0.00    0.08    0.00    0.00   97.84
说明：
%user：表示处理用户进程所使用CPU的百分比。用户进程是用于应用程序（如Oracle数据库）的非内核进程；            
%nice：表示使用nice命令对进程进行降级时CPU的百分比；  
%system：表示内核进程使用的CPU百分比；
%iowait：表示等待进行I/O所使用的CPU时间百分比；
%irq：表示用于处理系统中断的CPU百分比；
%soft：表示用于软件中断的CPU百分比；
%steal ：显示虚拟机管理器在服务另一个虚拟处理器时虚拟CPU处在非自愿等待下花费时间的百分比
%guest ：显示运行虚拟处理器时CPU花费时间的百分比
%idle：显示CPU的空闲时间；
%intr/s：显示每秒CPU接收的中断总数；

mpstat -P CPU 时间间隔 采集次数
mpstat -P ALL 1 5    ----所有的cpu
mpstat -P 0 1 5    ----第一颗cpu
mpstat –P ALL interval times

=======================================================================================================
pidstat是sysstat工具的一个命令，用于监控全部或指定进程的cpu、内存、线程、设备IO等系统资源的占用情况。
pidstat首次运行时显示自系统启动开始的各项统计信息，之后运行pidstat将显示自上次运行该命令以后的统计信息。
用户可以通过指定统计的次数和时间来获得所需的统计信息。

pidstat [ 选项 ] [ <时间间隔> ] [ <次数> ]

详细说明
PID：进程ID
%usr：进程在用户空间占用cpu的百分比
%system：进程在内核空间占用cpu的百分比
%guest：进程在虚拟机占用cpu的百分比
%CPU：进程占用cpu的百分比
CPU：处理进程的cpu编号

========================================================
Command：当前进程对应的命令显示每个进程的上下文切换情况（-w）
pidstat -w -p 2831
PID:进程id
Cswch/s:每秒主动任务上下文切换数量
Nvcswch/s:每秒被动任务上下文切换数量
Command:命令名

==============================================
内存使用情况统计(-r)
pidstat -r
使用-r选项，pidstat将显示各活动进程的内存使用统计：
PID：进程标识符
Minflt/s:任务每秒发生的次要错误，不需要从磁盘中加载页
Majflt/s:任务每秒发生的主要错误，需要从磁盘中加载页
VSZ：虚拟地址大小，虚拟内存的使用KB
RSS：常驻集合大小，非交换区五里内存使用KB
Command：task命令名

============================================
显示各个进程的IO使用情况（-d）
pidstat -d
报告IO统计显示以下信息：
PID：进程id
kB_rd/s：每秒从磁盘读取的KB
kB_wr/s：每秒写入磁盘KB
kB_ccwr/s：任务取消的写入磁盘的KB。当任务截断脏的pagecache的时候会发生。
COMMAND:task的命令名

=============================================
显示选择任务的线程的统计信息外的额外信息 (-t)
pidstat -t -p 2831

TGID:主线程的表示
TID:线程id
%usr：进程在用户空间占用cpu的百分比
%system：进程在内核空间占用cpu的百分比
%guest：进程在虚拟机占用cpu的百分比
%CPU：进程占用cpu的百分比
CPU：处理进程的cpu编号
Command：当前进程对应的命令


========================================================
示例七：pidstat -T
pidstat -T TASK
pidstat -T CHILD
pidstat -T ALL
TASK表示报告独立的task。
CHILD关键字表示报告进程下所有线程统计信息。
ALL表示报告独立的task和task下面的所有线程。

注意：task和子线程的全局的统计信息和pidstat选项无关。这些统计信息不会对应到当前的统计间隔，这些统计信息只有在子线程kill或者完成的时候才会被收集。
PID:进程id
Usr-ms:任务和子线程在用户级别使用的毫秒数。
System-ms:任务和子线程在系统级别使用的毫秒数。
Guest-ms:任务和子线程在虚拟机(running a virtual processor)使用的毫秒数。
Command:命令名

================================================================







