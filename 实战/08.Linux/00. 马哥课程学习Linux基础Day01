Linux接口包含两种
          1. 图像接口
          2. 命令行接口

操作系统功能：
          1. 驱动程序
          2. 进程管理功能
          3. 安全功能
          4. 网络功能
          5. 内存管理
          6. 文件系统
          
查看端口使用情况
ss -ltn   --表示listen  tcp    number 查看本机的监听端口

确保防火墙是关闭的：
      systemctl disable firewalld.service
      systemctl stop firewalld.service

输出当前的shell
# echo $SHELL

Linux思维一切皆终端
硬件设备表示为文件
      物理终端： /dev/console  (控制台/console)
      虚拟终端：/dev/tty[1,6]  
      图形终端：/dev/tty7
      串行终端：/dev/ttyS#
      伪终端：  /dev/pty/#
      
输入tty就能显示使用的终端

注意：启动设备后,在其上关联一个用户接口程序即可实现和用户交互.输入echo $SHELL 能看到接口程序是什么,输入tty能看到终端是什么.
tty1 –tty6等称为虚拟终端，而tty0则是当前所使用虚拟终端的一个别名， 系统所产生的信息会发送到该终端上。
启动图形界面 startx &

操作系统的组成：
1. 硬件
2. 内核
3. 库
4. shell

[root@vm02 etc]# 这个叫工作提示符

文件的路径：/etc/sysconfig/network-scripts/ifcfg-ens6666
          组成部分basename 和 dirname
[root@vm02 etc]# basename /etc/sysconfig/network-scripts/ifcfg-enp0s3 
ifcfg-enp0s3
[root@vm02 etc]# firname /etc/sysconfig/network-scripts/ifcfg-enp0s3 
-bash: firname: command not found
[root@vm02 etc]# dirname /etc/sysconfig/network-scripts/ifcfg-enp0s3 
/etc/sysconfig/network-scripts



切换家目录
cd ~         切换到家目录
cd ~USERNAME 切换到别人的家目录
cd -         切换到上一个目录

变量当前目录 echo $PWD
变量上一层目录 echo $OLDPWD

ls命令：
      -a 全部
      -A 除了. ..
      -l 长格式
      -h 人类可识别的方式
      -d 查看当前目录的属性
      -r 逆序
      -R 循环
      -t 时间排序

查看文件的类型 file  filename

cat file01 file02 file03 ...
      -n 显示number
      
tac 文本文件查看工具:文本文件是逆序的和cat一样只是顺序不一样

file 命令用来确定文件类型

echo 命令
  -n 结尾不进行换行
  -e 让转义符号生效
  
  
字符串：
  单引号：强引用,变量引用不执行替换    echo '$SHELL'
  双引号：弱引用,变量引用执行替换      echo "$SHELL"
  
日期相关的命令：
  date      --显示和修改时间的
  clock     -- 硬件时钟和hwclock是同一套东西
  hwclock   -- 硬件时间,主板上的纽扣电池一直在供电
  cal       -- 日历,
  
  
  Linux启动后从硬件读取启动时间然后就不和硬件相关联了.然后按照内核评率来计时.date看到是系统时钟
  
  Linux系统 普通命令放在  /bin        /usr/bin            /usr/local/bin
            管理命令放在  /sbin      /usr/sbin            /usr/local/sbin
  
  共享库     32位       /lib      /usr/lib               /usr/local/lib
            64位       /lib64    /usr/lib64               /usr/local/lib64
  
  内部SHELL命令使用方式：    help COMMAND        
            
  
  
  Liunx基本文件目录树标准FHS
  /bin    用户普通命令
  /sbin   系统管理命令需要root使用
  /boot   存储启动的文件
  /dev    设备分为字符设备和块设备 
          字符设别是指数据交换以字符进行的.(键盘和屏幕等)线性设备
          块设备指打包后发送过去(比如硬盘)快设备是随机的.可以随机访问
  /etc    主机特有的系统配置文件etc也有层级目录标准  只能为静态文本不能是可执行文件
  /home   用户的家目录 任何程序不要依赖这个文件下的内容(这个文件夹是可选的)
  /lib    基础共享库和内核模块 主要为/bin /sbin 提供共享库的
  /libXX
          这个文件夹下有如下两个为可加载的内核模块
          modules
          modules-load.d
  /media  可移动的移动挂载点 比如插了块U盘
  /mnt    其他系统的挂载点 /media 和 /mnt 没特别要求也可以不按照规则挂载
  /opt    add-on application 软件包之系统额外的软件包 附加应用程序的安装位第三方应用程序
  /root   管理员的家目录
  /srv    service的简写 主机特有的为服务提供的数据  大部分时间用不到
  /tmp    临时文件 可供所有用户执行写入
  /usr    usr自己就是一个层级结构
          除了跟节点是最重要的文件目录
          该文件夹是全局共享只读文件夹.不允许用户在该目录下创建任何文件.root除外.
          包含：
          bin
          include
          lib
          local     ----另一个层级目录,只用于安装第三方应用程序的地方,早期安装在opt现在装在local目录,比如老版本在usr内但是不能删掉,可能被其他程序用
                    ----那就装在/usr/local 装个新版本又能保护老版本的时候.也用于安装第三方应用.这样的话就和usr结构很相识
          sbin
          share
          如下可选的--------------------------------------------------------------
          src 源码
          等等等
   /var   存储变化的可变的数据文件.管理员的日志数据.临时的文件.
          tmp目录的话在系统重启后依然需要留存的数据.
          
   /proc 给予内存在虚拟文件系统 关机重启消失. 进程和内核信息状态的虚拟文件系统,查看内核参数
   
   /sys  从proc独立出来了一个 提供比proc提供了更便利的访问内核信息的信息访问方式,出现在proc后.为管理linux设备提供了一种统一模型的系统
   
   
          
 ibm developworks 文档还是非常丰富的. 
          
  好书推荐：奇点临近
  
  
  which命令 显示shell command命令在哪里
  
  whereis 显示命令二进制 source 手册页
  
  who  显示谁在登陆
  
  w    增强版的whi命令 哪些人在干什么
  
  history  命令的历史 命令能保存多少个,重启时候会持久保存在文件中. 定制history功能可以通过环境变量的方式.
          HISTSIZE表示存储的长度
  
  mkdir命令：
          -p 创建父目录
          {,}以逗号隔开可以展开为多个参数  mkdir {a,b} 创建两个文件夹 a 和 b 
                    例子 make {a,b}_{c,d} -> a_b a_c b_c b_d
  
  
  命令的返回结果
  每个shell命令执行完后都会有个执行的成功失败的值
  0 表示成功  1- 255 表示失败.
  $! 表示该执行结果
  
  引用命令的返回结果
  $(COMMAND)或者'COMMAND'
  比如 mkdir $(date +%H-%M-%S)
  
  bash快捷键
  
  ctrl + a 到首部
  ctrl + e 到尾部
  ctrl + u 到行首
  ctrl + k 删除光标所在处到行尾
  ctrl + l 请屏幕
  
  
  cat 
  
          cat -n 看行数
          more
          less
          head
          
  
  
  
          
         
         
  
  
  
  
  

  
  












      
      
      
    
    
    
    
    


















      
      

