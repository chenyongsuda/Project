
安装DELT安装包
yum install deltarpm

CentOS Docker 安装
Docker支持以下的CentOS版本：

CentOS 7 (64-bit)
CentOS 6.5 (64-bit) 或更高的版本
前提条件
目前，CentOS 仅发行版本中的内核支持 Docker。

Docker 运行在 CentOS 7 上，要求系统为64位、系统内核版本为 3.10 以上。

Docker 运行在 CentOS-6.5 或更高的版本的 CentOS 上，要求系统为64位、系统内核版本为 2.6.32-431 或者更高版本。

使用 yum 安装（CentOS 7下）
Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。

通过 uname -r 命令查看你当前的内核版本
[root@runoob ~]# uname -r 3.10.0-327.el7.x86_64


安装 Docker
从 2017 年 3 月开始 docker 在原来的基础上分为两个分支版本: Docker CE 和 Docker EE。

Docker CE 即社区免费版，Docker EE 即企业版，强调安全，但需付费使用。

本文介绍 Docker CE 的安装使用。

移除旧的版本：

$ sudo yum remove docker \
                  docker-client \
                  docker-client-latest \
                  docker-common \
                  docker-latest \
                  docker-latest-logrotate \
                  docker-logrotate \
                  docker-selinux \
                  docker-engine-selinux \
                  docker-engine
安装一些必要的系统工具：

sudo yum install -y yum-utils device-mapper-persistent-data lvm2
添加软件源信息：

sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
更新 yum 缓存：

sudo yum makecache fast
安装 Docker-ce：

sudo yum -y install docker-ce
启动 Docker 后台服务

sudo systemctl start docker
测试运行 hello-world

[root@runoob ~]# docker run hello-world


由于本地没有hello-world这个镜像，所以会下载一个hello-world的镜像，并在容器内运行。

=============================================================================================
Docker 基本有三个比较常用的命令

docker build
docker run
docker pull

docker的配置文件默认在/etc/docker/deamon.json
docker镜像加速  
  1. docker cn
  2. 阿里云
  3. 中国科技大学

镜像加速配置：
  sudo mkdir -p /etc/docker
  sudo tee /etc/docker/daemon.json <<-'EOF'
  {
    "registry-mirrors": ["https://5qsph43c.mirror.aliyuncs.com"]
  }
  EOF
  如果之前已经启动了使用：
  sudo systemctl daemon-reload
  sudo systemctl restart docker
  
  如果没启动过：
  启动程序systemctl start docker
  
  使用docker version 看下版本或者使用其他子命令
  
  使用docker info 查看docker系统的状态
  [root@vm01 docker]# docker info
    Containers: 1
     Running: 0
     Paused: 0
     Stopped: 1
    Images: 1
    Server Version: 18.06.1-ce
    Storage Driver: overlay2
     Backing Filesystem: xfs
     Supports d_type: true
     Native Overlay Diff: true
    Logging Driver: json-file
    Cgroup Driver: cgroupfs
    
  看到有一个容器 没有正在运行的容器
  
  查看那些images在这台机器
  [root@vm01 docker]# docker image list
    REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
    hello-world         latest              4ab4c602aa5e        6 weeks ago         1.84kB

如果要搜索远程的仓库用dock search

================================================================================================================
仓库导入导出等操作

Docker 本地导入镜像/保存镜像/载入镜像/删除镜像
1、Docker导入本地镜像

有时候我们自己在本地或者其它小伙伴电脑上拷贝了一份镜像，有了这个镜像之后，我们可以把本地的镜像导入，使用docker import 命令。

例如这里下载了一个 alibaba-rocketmq-3.2.6.tar.gz 镜像文件，使用下列命令导入：

复制代码
[root@rocketmq-nameserver4 dev]# cat alibaba-rocketmq-3.2.6.tar.gz | docker import - rocketmq:3.2.6(镜像名自己定义)
[root@rocketmq-nameserver4 dev]# docker images
REPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE
rocketmq                     3.2.6               53925d1cf9f0        23 seconds ago      14MB
my/python                    v1                  36b6e288656c        2 days ago          281MB
my/centos_width_python       v1.0.1              36b6e288656c        2 days ago          281MB
my/sinatra                   v2                  8ba1d6a3ce4e        2 days ago          453MB
hello-world                  latest              725dcfab7d63        4 months ago        1.84kB
复制代码
可以看到导入完成后，docker为我们生成了一个镜像ID，使用docker images也可以看到我们刚刚从本地导入的镜像。

注意镜像文件必须是tar.gz类型的文件。

[root@rocketmq-nameserver4 dev]# docker run -it rocketmq:3.2.6 /bin/bash ##启动导入本地镜像,会报如下异常
docker: Error response from daemon: oci runtime error: container_linux.go:247: starting container process caused "exec: \"/bin/bash\": stat /bin/bash: no such file or directory".

解决方案： 暂时无解，有知道的兄台请在下面留言，在此先谢了。


2、保存镜像
我们的镜像做好之后，我们要保存起来，以供备份使用，该怎么做？使用docker save命令，保存镜像到本地。

[root@rocketmq-nameserver4 dev]# docker save -o rocketmq.tar rocketmq ##-o：指定保存的镜像的名字；rocketmq.tar：保存到本地的镜像名称；rocketmq：镜像名字，通过"docker images"查看
[root@rocketmq-nameserver4 dev]# ll 

rocketmq.tar为刚保存的镜像

3、载入镜像
我们有了本地的镜像文件，在需要的时候可以使用docker load将本地保存的镜像再次导入docker中。
docker load --input rocketmq.tar 或 docker load < rocketmq.tar


4、删除镜像
有些镜像过时了，我们需要删除。使用如下的命令：docker rmi -f image_id ##-f：表示强制删除镜像；image_id：镜像id

=======================================================================================================================================

配置docker代理
3. 为docker设置代理
3.1 创建目录
mkdir -p /etc/systemd/system/docker.service.d

3.2 创建文件/etc/systemd/system/docker.service.d/http-proxy.conf，内容如下：
[Service]
Environment="HTTP_PROXY=http://pill:pill@node2:3128/"

3.3 重启docker
systemctl daemon-reload
systemctl restart docker

3.4 验证docker代理是否设置成功
systemctl show --property=Environment docker　　
显示如下结果说明设置成功
Environment=GOTRACEBACK=crash HTTP_PROXY=http://pill:pill@node2:3128/


========================================================================================================================================


启动busybox容器,设置容器名字,交互式运行,停止自动删除.
docker container run -it --name bb01 --rm busybox

以交互方式进入运行中的容器
docker exec -it bb01 /bin/sh 该方式使多用户的. 没人进入是不互相影响的
或者
docker container attach bb01 该方式使多人都会互相影响比如在一个人终端上输入exit的话全部人员都会退出是相互影响的.

查看容器CPU 内存占用
 docker container stats
 
 查看所有容器的话
 docker container ls
 
 
 

  
  

