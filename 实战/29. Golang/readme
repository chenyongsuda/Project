Go语言具有“部署简单、并发性好、语言设计良好、执行性能好”等优势，

Go语言没有类和继承的概念，Go语言有一个清晰易懂的轻量级类型系统，在类型之间也没有层级之说

因此可以说Go语言是一门混合型的语言。

Go语言的语法规则严谨，没有歧义，更没什么黑魔法变异用法。任何人写出的代码都基本一致，这使得Go语言简单易学。

Go语言却一反常态做了件极大胆的事，从根本上将一切都并发化，运行时用 Goroutine 运行所有的一切，包括 main.main 入口函数。

完整的工具链对于日常开发极为重要。Go 在此做得相当不错，无论是编译、格式化、错误检查、帮助文档，还是第三方包下载、更新都有对应的工具。其功能未必完善，但起码算得上简单易用。
内置完整测试框架，其中包括单元测试、性能测试、代码覆盖率、数据竞争，以及用来调优的 pprof，这些都是保障代码能正确而稳定运行的必备利器。



其实Go语言主要用作服务器端开发，其定位是用来开发“大型软件”的，适合于需要很多程序员一起开发，并且开发周期较长的大型软件和支持云计算的网络服务。
Go语言融合了传统编译型语言的高效性和脚本语言的易用性和富于表达性，不仅提高了项目的开发速度，而且后期维护起来也非常轻松。

鉴于Go语言的特点和设计的初衷，从以下几个方面来分析Go语言擅长的领域：
在服务器编程方面，Go语言适合处理日志、数据打包、虚拟机处理、文件系统、分布式系统、数据库代理等；
网络编程方面，Go语言广泛应用于 Web 应用、API 应用、下载应用等；
此外，Go语言还可用于内存数据库和云平台领域，目前国外很多云平台都是采用 Go 开发。

除了上面介绍到的，Go语言还可以用来开发底层，例如以太坊、超级账本等都是基于Go语言开发的。

而且对于现在比较流行的区块链技术方面，Go语言也是非常受欢迎的，很多基于区块链的 DApps（去中心化应用）和工具都是用的Go语言来实现的。

下面列举了一些基于Go语言开发的优秀开源项目：
云计算基础设施领域，代表项目：docker、kubernetes、etcd、consul、cloudflare CDN、七牛云存储等。
基础软件，代表项目：tidb、influxdb、cockroachdb 等。
微服务，代表项目：go-kit、micro、monzo bank 的 typhon、bilibili 等。
互联网基础设施，代表项目：以太坊、hyperledger 等。

总之，Go语言的优势还是比较多的，比如Go语言的性能非常出色，最关键的是在性能强劲的同时还能像解释型语言一样高效地进行开发。
