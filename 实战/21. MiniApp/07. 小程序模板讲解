小程序的初始模板
1. 设计首页
	小程序初始模板首页设计
	<!--index.wxml-->
	<view class="container">
	  <view class="userinfo">
		<button wx:if="{{!hasUserInfo && canIUse}}" open-type="getUserInfo" bindgetuserinfo="getUserInfo"> 获取头像昵称 </button>
		<block wx:else>
		  <image bindtap="bindViewTap" class="userinfo-avatar" src="{{userInfo.avatarUrl}}" mode="cover"></image>
		  <text class="userinfo-nickname">{{userInfo.nickName}}</text>
		</block>
	  </view>
	  <view class="usermotto">
		<text class="user-motto">{{motto}}</text>
	  </view>
	</view>

分析：如果等初始化进入时候没有具有获取相应权限的资格的话.显示获取头像按钮,如果已经获取到权限的话显示主页中获取的头像和昵称

2. 分析程序第一次进入时候的代码
	onLaunch: function () {
    // 展示本地存储能力
    var logs = wx.getStorageSync('logs') || []
    logs.unshift(Date.now())
    wx.setStorageSync('logs', logs)

    // 登录
    wx.login({
      success: res => {
        // 发送 res.code 到后台换取 openId, sessionKey, unionId
      }
    })
    // 获取用户信息
    wx.getSetting({
      success: res => {
        if (res.authSetting['scope.userInfo']) {
          // 已经授权，可以直接调用 getUserInfo 获取头像昵称，不会弹框
          wx.getUserInfo({
            success: res => {
              // 可以将 res 发送给后台解码出 unionId
              this.globalData.userInfo = res.userInfo

              // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
              // 所以此处加入 callback 以防止这种情况
              if (this.userInfoReadyCallback) {
                this.userInfoReadyCallback(res)
              }
            }
          })
        }
      }
    })
	
	分析: 通过wx.login获取code,然后获取是否已经授权,如果已经授权的话设置用户信息,由于这个消息异步可能在PageOnload前所以在index页面设置回调方法
	1. 方法如果定义了，则说明page.onload比当前方法运行的早（page已经完成初始化），app的globalData还没有数据，通过此回调可以及时的刷新数据
	2. 方法如果没有定义，则说明page.onload比当前方法运行的晚（page还没有初始化），app的globalData是有值的，可以在page.onload中取globalData里面的值

	
	//index.js
	//获取应用实例
	const app = getApp()

	Page({
	  data: {
		motto: 'Hello World',
		userInfo: {},
		hasUserInfo: false,
		canIUse: wx.canIUse('button.open-type.getUserInfo')
	  },
	  //事件处理函数
	  bindViewTap: function() {
		wx.navigateTo({
		  url: '../logs/logs'
		})
	  },
	  onLoad: function () {
		if (app.globalData.userInfo) {
		  this.setData({
			userInfo: app.globalData.userInfo,
			hasUserInfo: true
		  })
		} else if (this.data.canIUse){
		  // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
		  // 所以此处加入 callback 以防止这种情况
		  app.userInfoReadyCallback = res => {
			this.setData({
			  userInfo: res.userInfo,
			  hasUserInfo: true
			})
		  }
		} else {
		  // 在没有 open-type=getUserInfo 版本的兼容处理
		  wx.getUserInfo({
			success: res => {
			  app.globalData.userInfo = res.userInfo
			  this.setData({
				userInfo: res.userInfo,
				hasUserInfo: true
			  })
			}
		  })
		}
	  },
	  getUserInfo: function(e) {
		console.log(e)
		app.globalData.userInfo = e.detail.userInfo
		this.setData({
		  userInfo: e.detail.userInfo,
		  hasUserInfo: true
		})
	  }
	})
