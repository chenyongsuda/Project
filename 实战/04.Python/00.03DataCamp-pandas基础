# Pandas 基础
      
      如下解答中说明了dataframe的values为numpy的ndarray
      
      # Import numpy
      import numpy as np

      # Create array of DataFrame values: np_vals
      np_vals = df.values

      # Create new array of base 10 logarithm values: np_vals_log10
      np_vals_log10 = np.log10(np_vals)

      # Create array of new DataFrame by passing df to np.log10(): df_log10
      df_log10 = np.log10(df)

      # Print original and new data containers
      [print(x, 'has type', type(eval(x))) for x in ['np_vals', 'np_vals_log10', 'df', 'df_log10']]
      
      输出：
          np_vals has type <class 'numpy.ndarray'>
          np_vals_log10 has type <class 'numpy.ndarray'>
          df has type <class 'pandas.core.frame.DataFrame'>
          df_log10 has type <class 'pandas.core.frame.DataFrame'>
          
#构造DataFrame方式
    1. 通过map来构造
    
    2. read_csv
    
    3. 也是通过map
        通过column的list和值的list进行zip
        然后通过map强制转为map 再用map构造为dataframe
        参考：
        zipped = list(zip(list_keys,list_values))
        # Inspect the list using print()
        print(zipped)
        # Build a dictionary with the zipped list: data
        data = dict(zipped)
        # Build and inspect a DataFrame from the dictionary: df
        df = pd.DataFrame(data)

#Dataframe的index和column可修改(relabeling特征)
    df.index = []
    df.columns = []

#Dataframe的值的传播特征
    # Make a string with the value 'PA': state
    state = 'PA'
    # Construct a dictionary: data
    data = {'state':state, 'city':cities}
    # Construct a DataFrame from dictionary data: df
    df = pd.DataFrame(data)
    
    通过只赋值给state一个值来把其他行的值都赋值了
    

#导入导出dataframe数据
  pd.read_csv(file_path, header=None, names=columns_name,delimiter=' ', index_column=xxx, comment='#', na_values = {columnsname : ['-1']}, prase_data = [[0,1,2]])
  
  可以重制df.index
  可以设置index的name df.index.name
  
  
  写csv的话可以 df.to_csv(out_csv, sep='\t')
  
  
 #Pandas画图
   画图方式可以是
   1.plt.plot(ndarray)
   2.plt.plot(serise)
   3.serise.plot()
   4.dataframe一样有这几种
   
   xxx.plot(color=xxx,style='xxx',legend=True) 等参数
   
   保存
   plt.saveplg(xxx.jpg)
   plt.saveplg(xxx.png)
   plt.saveplg(xxx.pdf)
   可以保存三种
   
#图形密度
      #线形图
      # Create a list of y-axis column names: y_columns
      y_columns = ['AAPL','IBM']
      # Generate a line plot
      df.plot(x='Month', y=y_columns)
      # Add the title
      plt.title('Monthly stock prices')
      # Add the y-axis label
      plt.ylabel('Price ($US)')
      
      #点图
      # Generate a scatter plot
      size为点的大小
      df.plot(kind='scatter', x='hp', y='mpg', s=sizes)
      
      #箱线图
      # Generate the box plots
      subplots表示图片分为多个单独绘制
      df[cols].plot(kind='box',subplots=True)
      
      #PDF 和 CDF 密度话和归一化
      # This formats the plots such that they appear on separate rows
      fig, axes = plt.subplots(nrows=2, ncols=1)
      # Plot the PDF
      df.fraction.plot(ax=axes[0], kind='hist', bins=30, normed=True, range=(0,.3))
      plt.show()
      # Plot the CDF
      df.fraction.plot(ax=axes[1], kind='hist', bins=30, cumulative=True, normed=True, range=(0,.3))
      plt.show()

#数据统计基础
      std	      标准差   标准差能反映一个数据集的离散程度  两组数的集合{0,5,9,14}和{5,6,8,9}其平均值都是7，但第二个集合具有较小的标准差。
      mean	      均值  df.mean(axis='columns') 安装每行计算一个平均值
      median	中位数
      count	非 NA 值的数量
      describe	针对 Series 或 DF 的列计算汇总统计
      min , max	最小值和最大值
      argmin , argmax	最小值和最大值的索引位置（整数）
      idxmin , idxmax	最小值和最大值的索引值
      quantile	样本分位数（0 到 1）                  df.quantile([0.05,0.95])
      sum	求和
      
      
      
      
      
      
      
    
