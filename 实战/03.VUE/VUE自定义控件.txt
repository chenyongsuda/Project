自定义全局组件
自定义vue全局组件use使用(解释vue.use()的原理)
我们在前面学习到是用别人的组件：Vue.use(VueRouter)、Vue.use(Mint)等等。
其实使用的这些都是全剧组件，这里我们就来讲解一下怎么样定义一个全局组件,并解释vue.use()的原理
而我们再用Axios做交互，则不能使用Vue.use(Axios)，因为Axios没有install

自定义一个全局Loading组件，并使用：
总结目录：
|-components
　　|-loading
　　　　|-index.js	导出组件，并且install
　　　　|-loading.vue	定义Loading组件，这里面基本的style ,script中之前讲的methods,data方法都可以使用

index.js中的代码：
import LoadingComponent from './loading.vue'
　　const Loading={
　　　　install:function(Vue){ //核心部分，在我们使用Vue.use()时，自动调用的是install，而install导出的必须是的组件
　　　　Vue.component('loading',LoadingComponent);
　　}
};
export default Loading;

main.js中要使用：
　　import loading from './components/loading'
　　Vue.use(loading); //调用的是install里面的组件



开始做一个组件
1.首先建立一个VUE组件,组件组成为模板,脚本,数据,格式如下：
<template>
</template>

<script>
  export default {
    data() {
        return {
        }
    }
  };
</script>

<style lang="stylus" rel="stylesheet/stylus">
</style>

