========================================================================
信号捕捉：
        列出信号：
            trap  -l
            kill  -l
            man  7  signal
         
            trap  'COMMAND'  SIGNALS
             
            常可以进行捕捉的信号：
                HUP， INT
             
            示例：
                #!/bin/bash
                #
                declare -a hosttmpfiles
                trap  'mytrap'  INT
 
                mytrap()  {
                    echo "Quit"
                    rm -f ${hosttmpfiles[@]}
                    exit 1
                }
 
 
                for i in {1..50}; do
                    tmpfile=$(mktemp /tmp/ping.XXXXXX)
                    if ping -W 1 -c 1 172.16.$i.1 &> /dev/null; then
                        echo "172.16.$i.1 is up" | tee $tmpfile
                    else
                        echo "172.16.$i.1 is down" | tee $tmpfile
                    fi
                    hosttmpfiles[${#hosttmpfiles[*]}]=$tmpfile
                done
 
                rm -f ${hosttmpfiles[@]}
                 
    在bash中使用ACSII颜色
        \033[31m hello \033[0m
            ##m：
                左侧#：
                    3：前景色
                    4：背景色
                右侧#：颜色种类
                    1, 2, 3, 4, 5, 6, 7
             
            #m：
                加粗、闪烁等功能；
                 
            多种控制符，可组合使用，彼此间用分号隔开；
             
    dialog命令可实现窗口化编程；
        各窗体控件使用方式；
        如何获取用户选择或键入的内容？
            默认，其输出信息被定向到了错误输出流；
         
    《高级bash编程指南》，《Linux命令行和shell脚本编程宝典》
=================================================================================================
正则表达式分类
正则表达式根据元字符的数量及功能不同又分为基本正则表达式（grep）和拓展正则表达式（egrep）。而grep和egrep同属于文本搜索工具，可根据用户指定的文本模式（搜索条件）对目标文件进行逐行搜索，显示能匹配到的行。用法上grep –E等同于egrep，与grep和egrep相似的文本搜索工具还有fgrep，因不支持使用正则表达式，所以不再单独介绍。
 
基本正则表达式（grep）
 
语法格式：grep[option]... 'PATTERN' FILE...
 
基本正则表达式元字符：
 
1.字符匹配:
    .：任意单个字符
    [ ]：匹配指定范围内的任意单个字符
    [0-9]：匹配单个数字
    [a-z]：匹配单个小写字母
[A-Z]：匹配单个大写字母
[[:digit:]]：匹配单个数字
[[:lower:]]：匹配单个小写字母
[[:upper:]]：匹配单个大写字母
[[:space:]]：匹配单个空白字符
[[:punct:]]：匹配单个标点符号
[[:alnum:]]：匹配单个字母或数字
[[:alpha:]]：匹配单个字母（不分大小写）
[^]：匹配范围外的任意单个字符
 
  2.次数匹配：
*：任意次（前面字符出现任意次）
\?：0次或1次（前面字符可有可无）
\{m\}： m次（前面字符出现m次）
\{m,n\}：至少m次，至多n次
\{m,\}：至少m次
\{0,n\}：至多n次
.*：任意长度的任意字符
 
  3.位置锚定：
^：行首锚定（写在模式最左侧）
$：行尾锚定（写在模式最右侧）
^$：空白行
\<,/b：词首锚定（出现于单词左侧）
\>,/b：词尾锚定（出现于单词右侧）
（注：不包含特殊字符的连续字符组成的串叫单词）
 
  4.分组
：如ab*
（分组中的模式匹配到的内容，可由正则表达式引擎记忆在内存中，之后可被引用）
 
  5.引用
\n：引用前面的第n个左括号以及与之对应的右括号中的模式所匹配到的内容
 
拓展正则表达式（egrep）
    语法格式：egrep [option] 'PATTERN' FILE...
 
拓展正则表达式元字符：
1.字符匹配:
 .：任意单个字符
 [ ]：匹配范围内的任意单个字符
 [^]：匹配范围外的任意单个字符
 
2.次数匹配：
*：任意次
?： 0或1次
+：至少1次
{m}： m次
{m,n}：至少m次，至多n次
{m,}：至少m次
{0,n}：至多n次
 
3.位置锚定：
^：行首锚定
$：行尾锚定
\<,\b：词首锚定
\>,\b：词尾锚定
^,[[:space:]]∗：空白行
 
4.分组：
( )：分组
12347|：或 
 
5.引用：
    \n：引用前面的第n个左括号以及与之对应的右括号中的模式所匹配到的内容
 
grep及egrep命令选项
-v： 反向选取
-o：仅显示匹配的字串，而非字串所在的行
-i：ignore-case，忽略字符大小写
-A：显示之后两行
-B：显示之前两行
-C：显示上下两行
 
用法
显示/proc/meminfo文件中以大写或小写S开头的行

显示/etc/passwd文件中其默认shell为非/sbin/nologin的用户
 
显示/etc/passwd文件中其默认shell为/bin/bash的用户中ID号最大的用户
 
找出/etc/passwd文件中的一位数或两位数
 
显示/boot/grub/grub.conf中以至少一个空白字符开头的行
 
显示/etc/rc.d/rc.sysinit文件中，以#开头，后面跟至少一个空白字符，而后又有至少一个非空白字符的行
 
找出netstat -tan命令执行结果中以'LISTEN'结尾的行
 
找出当前系统上其用户名和默认shell相同的用户 

显示当前系统上root或scholar用户的默认shell12
 
找出/etc/rc.d/init.d/functions文件中某单词后跟一组小括号“()”行
 
使用echo命令输出一个路径，而后使用grep取出其基名

找出ifconfig命令结果中的1-255之间的数字

文本查看及处理工具
wc：word count／统计文件中的行数，单词数，字节数
wc [OPTIONS]... [FILE]...
-l：只显示行数
-w：只显示单词数
-c：只显示字节数
cut：文本截取工具
-d CHAR：指定分隔符，默认为空格；-d和CHAR之间可以没有空格
-f：指定挑选出的字段／列
-f #：单个字段
-f #-#：连续字段
-f #,#：离散字段
-f 1,3-5,7：1，3，4，5，7字段
sort：排序工具
类似工具都不会改变原文件内容，只是将结果输出
-t CHAR：指定分隔符
-k #：用于排序比较的字段
-n：根据数值大小进行排序，2在10前面，否则10在2前面
基于UID对/etc/passwd中的行进行排序：cut -d: -f3 /etc/passwd | sort -n，但是这样截取之后，就不是原文件内容了，只显示第三列，所以应该sort -t: -k3 -n /etc/passwd
-r：逆序排序
-f：忽略字符大小写
-u：重复的行只保留一份
综合：cut -d: -f7 /etc/passwd|sort -u|wc -l，显示所有用户的默认shell总共有多少种
uniq：报告或移除重复的行
-c：显示每一行出现的次数
-u：只显示没有重复过的行
-d：只显示重复过的行
diff：逐行比较文件的不同之处
-u：使用unified机制，即显示要修改的行的上下文，默认为上下各3行
diff OldFile NewFile > PatchFile
patch：向文件打补丁
patch [OPTIONS] -i PatchFile OldFile
patch [OPTIONS] OldFile < PatchFile

练习：取出ifconfig eno16777736命令结果中的IP地址
