1. Impala is a high-performance SQL engine for vast amounts of data
– Massively-parallel processing (MPP)
– Inspired by Google’s Dremel project
– Query latency measured in milliseconds
– Developed by C++

三大组件
Impala Statestore
Impala Catalog Service
Impala Daemon ---数据处理的

一般大数据组件都支持ODBS和JDBC抽取数据

逻辑层面上一个表对应HDFS的一个目录并且目录没有嵌套

命令行上推荐使用beeline -u 不建议用hive
beeline -u jdbc:hive2://localhost:10000 -n training

impala使用impala-shell
#>impala-shell

清元数据
invalidate metadata

HIVE 和 Impala区别
---hive
hive 支持数据的隐式转化
> SELECT zipcode FROM customers LIMIT 1;
60601
> SELECT zipcode + 1.5 FROM customers LIMIT 1;
60602.5

---impala
> SELECT zipcode + 1.5 FROM customers LIMIT 1;
ERROR: AnalysisException: Arithmetic operation...

---------------------
Impala and Hive handle out-of-range values differently
– Hive returns NULL
– Impala returns the maximum value for that type

HIVE默认创建表路径
/user/hive/warehouse

定义表的存储路径 定义locationg
CREATE TABLE tablename (colname DATATYPE, ...)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY char
STORED AS {TEXTFILE|SEQUENCEFILE|…}
LOCATION xxxxxxxxxxx

CREATE TABLE jobs_archived LIKE jobs;拷贝表结构
拷贝数据

管理表和外部表
区别,管理表,drop后元数据和数据都没了

Sqoop 直接导入到hive表中
sqoop import \
--connect jdbc:mysql://localhost/dualcore \
--username training \
--password training \
--fields-terminated-by '\t' \
--table employees \
--hive-import

insert into 表 select xxx from 表
LOAD DATA [LOCAL] INPATH 'filepath' [OVERWRITE] INTO TABLE tablename [PARTITION (partcol1=val1, partcol2=val2 ...)]



