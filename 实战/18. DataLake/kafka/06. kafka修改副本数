
1>.创建1分区1个的topic
[root@node101 ~]# kafka-topics.sh --zookeeper node01:2181 --create --replication-factor 1 -partitions 1 --topic test-channel
Created topic "test-channel".

2>.查看topic的信息

[root@node101 ~]# kafka-topics.sh --describe --zookeeper node01:2181 --topic test-channel
Topic:test-channel    PartitionCount:1    ReplicationFactor:1    Configs:
    Topic: test-channel    Partition: 0    Leader: 103    Replicas: 103    Isr: 103                              #可以很明显的看出kafka 的分区数和副本数都是1
[root@node101 ~]# 

3>.将之前创建的topic修改为3个分区(请注意分区只能增加不能减少,但是可以减少副本数)
[root@node101 ~]# kafka-topics.sh --alter --zookeeper node01:2181 --topic test-channel --partitions 3
WARNING: If partitions are increased for a topic that has a key, the partition logic or ordering of the messages will be affected
Adding partitions succeeded!
[root@node101 ~]# 

4>.再次查看topic的分区数
[root@node101 ~]# kafka-topics.sh --describe --zookeeper node01:2181 --topic test-channel                   
Topic:test-channel    PartitionCount:3    ReplicationFactor:1    Configs:
    Topic: test-channel    Partition: 0    Leader: 103    Replicas: 103    Isr: 103                                    #这是第一个分区，它的副本数依然是1一个，当前0号分区的副本数存放在103这个节点上。说明你的数据修改成功啦！
    Topic: test-channel    Partition: 1    Leader: 101    Replicas: 101    Isr: 101
    Topic: test-channel    Partition: 2    Leader: 102    Replicas: 102    Isr: 102
[root@node101 ~]# 


调整副本数或者leader
创建需要调整的topic
{"topics":                            
  [{"topic": "test"}],
  "version":1                           
}

运行建议命令 输入broker哪几个 
sh kafka-reassign-partitions.sh --generate --zookeeper localhost:2181 --broker-list "0,1,2" --topics-to-move-json-file  tmp

将生成json结果拷贝到新的文件：tmp1，执行真正reassign操作
sh kafka-reassign-partitions.sh --zookeeper localhost:2181 --execute --reassignment-json-file addReplicas.json

查询执行状态
kafka-reassign-partitions.sh --zookeeper localhost:2181 --reassignment-json-file addReplicas.json --verify
is still in progress，说明正在进行分配
completed successfully, 说明分配完成













